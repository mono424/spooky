// ⚠️  WARNING: This file is automatically generated by syncgen.
// Do not modify this file manually as changes will be overwritten.
// To regenerate this file, run the syncgen command from the database package.
// Generated on: 2025-10-26 21:24:19 UTC

export interface Schema {
    comment: Comment;
    thread:  Thread;
    user:    User;
    [property: string]: any;
}

export interface Comment {
    /**
     * Record ID of table: user
     */
    author: string;
    /**
     * Assert: $value != NONE AND string::len($value) > 0
     */
    content:     string;
    created_at?: Date;
    /**
     * Record ID
     */
    id: string;
    /**
     * Record ID of table: thread
     */
    thread_id: string;
    [property: string]: any;
}

export interface Thread {
    /**
     * Record ID of table: user
     */
    author: string;
    /**
     * Assert: $value != NONE AND string::len($value) > 0
     */
    content:     string;
    created_at?: Date;
    /**
     * Record ID
     */
    id: string;
    /**
     * Assert: $value != NONE AND string::len($value) > 0 AND string::len($value) <= 200
     */
    title: string;
    [property: string]: any;
}

export interface User {
    created_at?: Date;
    /**
     * Record ID
     */
    id: string;
    /**
     * Assert: $value != NONE AND string::len($value) > 0
     */
    password: string;
    /**
     * Assert: $value != NONE AND string::is::alphanum($value) AND string::len($value) > 3
     */
    username: string;
    [property: string]: any;
}

/**
 * Relationships between tables
 * Maps each table name to an array of related table names
 */
export interface Relationships {
    thread: ["user"];
    comment: ["thread" | "user"];
}


/**
 * The complete SurrealDB schema definition.
 * This constant contains the raw .surql schema file content.
 */
export const SURQL_SCHEMA = `-- ##################################################################
-- SCOPES & AUTHENTICATION
-- ##################################################################
DEFINE ACCESS account ON DATABASE TYPE RECORD
	SIGNUP ( CREATE user SET username = $username, password = crypto::argon2::generate($password) )
	SIGNIN ( SELECT * FROM user WHERE username = $username AND crypto::argon2::compare(password, $password) )
	DURATION FOR TOKEN 15m, FOR SESSION 12h
;

-- ##################################################################
-- USER TABLE
-- ##################################################################

DEFINE TABLE user SCHEMAFULL
  PERMISSIONS FOR select, update, delete, create
  WHERE $access = "account"
  AND id = $auth.id
;

DEFINE FIELD username ON TABLE user TYPE string
    ASSERT $value != NONE AND string::is::alphanum($value) AND string::len($value) > 3;
    
DEFINE INDEX unique_username ON TABLE user FIELDS username UNIQUE;

DEFINE FIELD password ON TABLE user TYPE string
    ASSERT $value != NONE AND string::len($value) > 0;

DEFINE FIELD created_at ON TABLE user TYPE datetime
    VALUE time::now();

-- ##################################################################
-- THREAD TABLE
-- ##################################################################

DEFINE TABLE thread SCHEMAFULL
  PERMISSIONS
    FOR select WHERE true
    FOR update, delete, create WHERE $access = "account" AND author.id = $auth.id
;


DEFINE FIELD title ON TABLE thread TYPE string
    ASSERT $value != NONE AND string::len($value) > 0 AND string::len($value) <= 200;

DEFINE FIELD content ON TABLE thread TYPE string
    ASSERT $value != NONE AND string::len($value) > 0;

DEFINE FIELD author ON TABLE thread TYPE record<user>;

DEFINE FIELD created_at ON TABLE thread TYPE datetime
    VALUE time::now();


-- ##################################################################
-- COMMENT TABLE
-- ##################################################################

DEFINE TABLE comment SCHEMAFULL
  PERMISSIONS
    FOR select WHERE true
    FOR update, delete, create WHERE $access = "account" AND author.id = $auth.id
;

DEFINE FIELD thread_id ON TABLE comment TYPE record<thread>;

DEFINE FIELD content ON TABLE comment TYPE string
    ASSERT $value != NONE AND string::len($value) > 0;

DEFINE FIELD author ON TABLE comment TYPE record<user>;

DEFINE FIELD created_at ON TABLE comment TYPE datetime
    VALUE time::now();

`;
